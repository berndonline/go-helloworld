name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type (major|minor|patch)"
        required: true
        default: patch

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/k8s/go-helloworld

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Determine next version
        id: version
        env:
          BUMP_TYPE: ${{ github.event.inputs.bump }}
        run: |
          set -euo pipefail
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo v0.1.0)
          echo "Latest tag: ${latest_tag}"
          ver=${latest_tag#v}
          IFS='.' read -r major minor patch <<<"$ver"
          case "$BUMP_TYPE" in
            major) major=$((major+1)); minor=0; patch=0;;
            minor) minor=$((minor+1)); patch=0;;
            patch) patch=$((patch+1));;
            *) echo "Invalid bump type: $BUMP_TYPE"; exit 1;;
          esac
          new_tag="v${major}.${minor}.${patch}"
          echo "New tag: ${new_tag}"
          echo "new_tag=${new_tag}" >> "$GITHUB_OUTPUT"

      - name: Create and push git tag
        env:
          NEW_TAG: ${{ steps.version.outputs.new_tag }}
        run: |
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: ${{ steps.version.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: build/docker/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.new_tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.version.outputs.new_tag }}
            org.opencontainers.image.revision=${{ github.sha }}

